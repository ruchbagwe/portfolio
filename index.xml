<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Ruchi Bagwe</title>
    <link>https://ruchbagwe.github.io/portfolio/</link>
    <description>Recent content in Home on Ruchi Bagwe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Feb 2018 18:56:13 -0500</lastBuildDate>
    
	<atom:link href="https://ruchbagwe.github.io/portfolio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Atlassian Deployment Triggers</title>
      <link>https://ruchbagwe.github.io/portfolio/projects/contributions/deploy-triggers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/projects/contributions/deploy-triggers/</guid>
      <description>Addressed pretty significant page load performance issue founde in larger deployments. Eliminates uses of intensive backend query, replacing it with an asynchronous API call against a lucene index. This change reduces page load from from 2+ minutes to nearly instant, with an incredibly responsive UI.</description>
    </item>
    
    <item>
      <title>Natural Language Controlled Real-Time Object Recognition Framework for Household Robot</title>
      <link>https://ruchbagwe.github.io/portfolio/publications/nlp/</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/publications/nlp/</guid>
      <description>This paper is published in the 2021 IEEE 11th Annual Computing and Communication Workshop and Conference (CCWC)This paper describes an ongoing project that aims to provide people with physical disabilities a method to control a robot arm using voice commands.The goal is to enable the user to control the system using natural language, i.e., without learning a special robot control vocabulary. The work describes the design and evaluation of a real-time framework that combines speech recognition, camera-based object detection, and an inference module that matches the potentially ambiguous results of speech recognition with object detection outputs to generate a unique control input for a computer vision-based robot arm.</description>
    </item>
    
    <item>
      <title>Cortically Coupled Generative Adversarial Network for Target Image Retrieval in Rapid Image Search</title>
      <link>https://ruchbagwe.github.io/portfolio/publications/gan/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/publications/gan/</guid>
      <description>This paper is published in the 2020 IEEE Second International Conference on Cognitive Machine Intelligence (CogMI). In this paper, the focus is on developing the system that can relate a brain state to target identification and analysis in an RSVP. In this research, the P300 event occurred due to the shift in attention is analyzed and captured using the electroencephalogram (EEG). A model called Cortically-Coupled Generative Adversarial Network is proposed using this analysis.</description>
    </item>
    
    <item>
      <title>Automatic Numerical Question Answering on Table Using BERT-GNN</title>
      <link>https://ruchbagwe.github.io/portfolio/publications/bert/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/publications/bert/</guid>
      <description>This paper is published in the 2020 11th IEEE Annual Ubiquitous Computing, Electronics &amp;amp; Mobile Communication Conference (UEMCON).In this paper, a framework is proposed to answer questions on the table with numerical reasoning.This framework uses a context-snapshot mechanism to filter irrelevant table rows before tokenizing the table content. The filtered context and tokenized question are converted into vector representation using a pre-trained BERT model. This proposed model finds the correlation between the tokenized context-snapshot and numbers in question using graph neural networks.</description>
    </item>
    
    <item>
      <title>Automated Radar Signal Analysis Based on Deep Learning</title>
      <link>https://ruchbagwe.github.io/portfolio/publications/radarsignal/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/publications/radarsignal/</guid>
      <description>This paper is published in the 2020 10th Annual Computing and Communication Workshop and Conference (CCWC). In this research, a model based on the LSTM model combined with wavelet transform is proposed as a promising solution for the identification of a radar signal in a noisy environment. Radar emitter analysis is achieved by step by step process as followed:
 The first part is denoising a radar signal using a wavelet transform (WT).</description>
    </item>
    
    <item>
      <title>Added Docker Build Status Badge to shields.io</title>
      <link>https://ruchbagwe.github.io/portfolio/projects/contributions/shields-docker/</link>
      <pubDate>Tue, 07 Jan 2020 17:09:26 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/projects/contributions/shields-docker/</guid>
      <description>Shields.io is a massive library of badges that can be inserted into project README&amp;rsquo;s or websites displaying various statuses (code coverage, health, version, etc).Â Support for docker was missing the current build health, and was a pretty trivial addition.</description>
    </item>
    
    <item>
      <title>Schema.org Structured Data documentation fixes</title>
      <link>https://ruchbagwe.github.io/portfolio/projects/contributions/schema-org/</link>
      <pubDate>Tue, 07 Jan 2020 17:08:21 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/projects/contributions/schema-org/</guid>
      <description>While adding Structured Data to a client&amp;rsquo;s website I found some example JSON that was invalid. Simple contribution to cleanup the user documentation providing syntactically valid JSON documents.</description>
    </item>
    
    <item>
      <title>Forcing Visits to use SSL</title>
      <link>https://ruchbagwe.github.io/portfolio/blog/force-ssl/</link>
      <pubDate>Thu, 01 Jan 2009 14:09:10 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/blog/force-ssl/</guid>
      <description>Intro Doesn&amp;rsquo;t matter whether it&amp;rsquo;s a CakePHP app for a client, your own personal CMS, or any other web based application. If your passing around passwords or other sensitive info you should really implement SSL. SSL provides 2 main perks to your visitors.
 First it encrypts all communication that flies across the web. This prevents curious or devious billies from getting your secrets. Secondly it ensures to the user that your server is in fact who it claims, and not a nasty &amp;lsquo;man in the middle&amp;rdquo; attack.</description>
    </item>
    
    <item>
      <title>Cortically-Coupled GAN for Target Image Retrieval in RSVP</title>
      <link>https://ruchbagwe.github.io/portfolio/projects/creations/ccgan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/projects/creations/ccgan/</guid>
      <description>In this project, the P300 event occurred due to the shift in attention is analyzed and captured using the electroencephalogram (EEG). Using this analysis, a model called Cortically-Coupled Generative Adversarial Network is developed. This model identifies and retrieves the target image in a rapid serial visual presentation(RSVP) event.</description>
    </item>
    
    <item>
      <title>Machine anomaly detection for Multivariate Time Series</title>
      <link>https://ruchbagwe.github.io/portfolio/projects/creations/timeseries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/projects/creations/timeseries/</guid>
      <description>In this project, I have used a technique to detect anomaly in a complex system made by multiple correlated series. I have used the LSTM model to extract features from the correlated series of sensor data. The sensor data is first denoised, and then the relationship among the features is learned with dimensionality reduction. The learned relationship is them used to build an automated mechanism to alert the times of fault and failure in the machine.</description>
    </item>
    
    <item>
      <title>Product description classification using NER</title>
      <link>https://ruchbagwe.github.io/portfolio/projects/creations/1ner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/projects/creations/1ner/</guid>
      <description>n this project, the product is classified by performing entity recognition from product descriptio using NER. The laptops data was scrapped from the eBay website using Beautifulsoup. Entities are the laptop description (Product Brand, Product Model, Hard disk type/size, display type, etc.) available on the eBay site.</description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://ruchbagwe.github.io/portfolio/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruchbagwe.github.io/portfolio/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml
[outputs] home = [&amp;#34;HTML&amp;#34;, &amp;#34;JSON&amp;#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.</description>
    </item>
    
  </channel>
</rss>